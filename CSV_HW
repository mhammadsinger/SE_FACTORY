def create_sql_staging_tables(db_session, database_name,public_schema,input_type):

    return_val = ErrorHandling.NO_ERROR    
    tables = return_tables_by_schema(database_name)
    
    for table in tables:
        try:
                
                if  input_type== InputTypes.SQL:      
                        staging_query = f""" SELECT * FROM {public_schema}.{table} LIMIT 1 """    

                        staging_df = return_data_as_df(db_session= db_session, input_type= InputTypes.SQL, file_executor= staging_query)
                        dst_table = f"stg_{public_schema}_{table}"
                        create_stmt = return_create_statement_from_df(staging_df, 'dw_reporting', dst_table)

                        execute_query(db_session=db_session, query= create_stmt)
                elif input_type== InputTypes.CSV:
                       staging_query = f""" SELECT * FROM {public_schema}.{table} LIMIT 1 """    

                       staging_df = return_data_as_df(db_session= db_session, input_type= InputTypes.CSV, file_executor= staging_query)
                       dst_table = f"stg_{public_schema}_{table}"
                       create_stmt = return_create_statement_from_df(staging_df, 'dw_reporting', dst_table)

                       execute_query(db_session=db_session, query= create_stmt)
                       
                else:
                     raise Exception('The file type is not available')
                
        except Exception as e:
                reason=str(e)
                if input_type==InputTypes.SQL:
                        explanation = ErrorHandling.RETURN_DATA_SQL_ERROR.value
                elif input_type==InputTypes.CSV:
                        explanation = ErrorHandling.RETURN_DATA_CSV_ERROR.value
                else:
                        explanation = ErrorHandling.RETURN_DATA_UNDEFINED_ERROR.value

                show_error_message(reason, explanation)
        finally:
               return return_val
                                

             


create_sql_staging_tables(db_session, 'dvd_rental','public',InputTypes.SQL)
